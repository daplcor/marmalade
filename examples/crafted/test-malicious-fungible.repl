;;load policy manager, ledger
(load "../../pact/marmalade.repl")

(begin-tx "Load contract and dependencies")
  (env-sigs [
    { 'key: 'basic-sale-admin
    ,'caps: []
    }])
  (env-data
  { 'basic-sale-admin: ["basic-sale-admin"]
    , 'ns: "free"
    , 'upgrade: false })

  (load "../basic-bidding-sale/basic-bidding-sale.pact")
  (load "./crafted-fungible.pact")
  (load "./crafted-policy.pact")
(commit-tx)

(begin-tx "Create 1 empty policies token, 1 token with crafted-fungible")
  (use marmalade-v2.ledger)
  (use marmalade-v2.policy-manager)
  (use marmalade-v2.util-v1)

  (env-data {
    "token-id": (create-token-id {'uri: "test-bidding-uri", 'precision: 0, 'policies: []}),
    "account": "k:alice",
    "account-guard": {"keys": ["alice"], "pred": "keys-all"},
    "crafted-token-id": (create-token-id {'uri: "test-bidding-uri", 'precision: 0, 'policies: [free.crafted-policy]}),
    "crafted-account": "k:malice",
    "crafted-account-guard": {"keys": ["malice"], "pred": "keys-all"}
  })

  (expect "create a default token without any policies"
    true
    (create-token (read-string 'token-id) 0 "test-bidding-uri" [] ))

  (expect "create a default token without any policies"
    true
    (create-token (read-string 'crafted-token-id) 0 "test-bidding-uri" [free.crafted-policy] ))

  (env-sigs [
    { 'key: 'random
    ,'caps: [(marmalade-v2.ledger.MINT (read-string 'token-id) "k:alice" 2.0)
             (marmalade-v2.ledger.MINT (read-string 'crafted-token-id) "k:malice" 2.0)]
    }])


  (mint (read-string 'token-id)  (read-string 'account) (read-keyset 'account-guard ) 2.0)
  (mint (read-string 'crafted-token-id)  (read-string 'crafted-account) (read-keyset 'crafted-account-guard ) 2.0)

  (expect "total supply of the token is 2.0" 2.0 (total-supply (read-msg 'token-id )))
  (expect "total supply of the token is 2.0" 2.0 (total-supply (read-msg 'crafted-token-id )))

(commit-tx)

(begin-tx "Create an offer with empty policy token")

  (env-hash (hash "offer-1"))
  (use marmalade-v2.ledger)
  (use marmalade-v2.util-v1)
  (use free.basic-bidding-sale)

  (env-data {
    "seller-guard": {"keys": ["alice"], "pred": "keys-all"}
  })

  (env-data {
    "token-id": "t:Pwo01UasZppPu1k7hmk7W16w4RK7C3qaVdkc1-T_ew8"
    ,"quote": {
      "spec": {
        "seller-fungible-account": {
            "account": "k:alice"
          ,"guard": ns.GUARD_SUCCESS
          }
        ,"fungible": free.crafted-fungible
        ,"price": 200.0
        ,"amount": 1.0
      }
    ,"seller-guard": {"keys": ["alice"], "pred": "keys-all"}
    ,"quote-guards": [{"keys": ["alice"], "pred": "keys-all"}]
    }
  })

  (env-chain-data {"block-time": (time "2023-07-20T11:26:35Z")})
  (env-sigs [
    { 'key: 'alice
    ,'caps: [
    (marmalade-v2.ledger.OFFER (read-string 'token-id ) "k:alice" 1.0 (to-timestamp (time "2023-07-22T11:26:35Z")))]
    }])

  (sale (read-string 'token-id ) "k:alice" 1.0 (to-timestamp (time "2023-07-22T11:26:35Z")))
(commit-tx)

(begin-tx "Place bid")

  (env-hash (hash "offer-bidding-0"))
  (use marmalade-v2.ledger)
  (use free.basic-bidding-sale)

  (env-data {
     "token-id": "t:Pwo01UasZppPu1k7hmk7W16w4RK7C3qaVdkc1-T_ew8"
    ,"sale-id": "DKc5HEWcmP8iPWue2WvMcnjn_WnowmuHz5Ogukm2SWk"
    ,"bidder-guard": {"keys": ["bidder"], "pred": "keys-all"}
    ,"quote":{
      "spec": {
        "seller-fungible-account": {
            "account": "k:alice"
          ,"guard": ns.GUARD_SUCCESS
          }
        ,"fungible": free.crafted-fungible
        ,"price": 200.0
        ,"amount": 1.0
      }
    ,"seller-guard": {"keys": ["alice"], "pred": "keys-all"}
    ,"quote-guards": [{"keys": ["alice"], "pred": "keys-all"}]
    }
  })

  (env-sigs
    [{'key:'bidder
      ,'caps: [
         (free.crafted-fungible.TRANSFER "k:bidder" "c:nCEkWbyh80ghGYVluN4aDYJWk2Rctyu_lpHxEDGjUoI" 150.0)
      ]}
    {'key: 'alice, 'caps: [
      (marmalade-v2.quote-manager.UPDATE_QUOTE_PRICE (read-string 'sale-id))
      (marmalade-v2.ledger.BURN "t:Pwo01UasZppPu1k7hmk7W16w4RK7C3qaVdkc1-T_ew8" "k:alice" 1.0)]}
      ])

  (expect "Bid is placed"
    true
    (place-bid (read-msg 'token-id) "k:bidder" (read-keyset 'bidder-guard) 1.0 150.0 (read-msg 'sale-id))
  )

(commit-tx)

(begin-tx "upgrade crafted-fungible to add in `ledger.burn` of a token that was created with crafted-policy")
  (env-data
  { 'ns: "free"})
  (load "crafted-fungible-activate.pact")
(commit-tx)

(begin-tx)
(use marmalade-v2.ledger)
(use free.basic-bidding-sale)

  (env-data {
    "bid-id": "DKc5HEWcmP8iPWue2WvMcnjn_WnowmuHz5Ogukm2SWk-k:bidder"
    ,"sale-id": "DKc5HEWcmP8iPWue2WvMcnjn_WnowmuHz5Ogukm2SWk"
    ,"quote":{
      "spec": {
        "seller-fungible-account": {
            "account": "k:malice"
          ,"guard": ns.GUARD_SUCCESS
          }
        ,"fungible": free.crafted-fungible
        ,"price": 100000.0
        ,"amount": 1.0
      }
    ,"seller-guard": {"keys": ["alice"], "pred": "keys-all"}
    ,"quote-guards": [{"keys": ["alice"], "pred": "keys-all"}]
    }
  })

  (env-sigs
    [ {'key: 'alice, 'caps: [
      (free.basic-bidding-sale.ACCEPT_BID (read-string 'sale-id))
      ]}
  ])

(expect-failure "add-quote hidden inside crafted-policy's enforce-burn is restricted from calling add-quote"
  "require-capability: not granted: (marmalade-v2.policy-manager.ADD-QUOTE-CALL \"attack-sale-id\" \"t:Pwo01UasZppPu1k7hmk7W16w4RK7C3qaVdkc1-T_ew8\" 100000.0)"
  (accept-bid (read-msg 'bid-id) (read-msg 'sale-id)))

(commit-tx)
